// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210815093253_AddedSomeTables")]
    partial class AddedSomeTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.BalanceEquipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ManufactureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BalanceEquipments");
                });

            modelBuilder.Entity("Domain.Moisture.MoistureContent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CheckerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateChecked")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTested")
                        .HasColumnType("datetime2");

                    b.Property<double>("MaterialDryMass")
                        .HasColumnType("float");

                    b.Property<Guid?>("PreparationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SampleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("SelectDryingTemperature")
                        .HasColumnType("bit");

                    b.Property<bool>("SelectInsufficientSampleMass")
                        .HasColumnType("bit");

                    b.Property<bool>("SelectMaterialExcluded")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SourceMaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SpecificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StandardTestMethodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("TareAndMaterialDryMass")
                        .HasColumnType("float");

                    b.Property<double>("TareAndMaterialWetMass")
                        .HasColumnType("float");

                    b.Property<string>("TareId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TareMass")
                        .HasColumnType("float");

                    b.Property<string>("TesterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<double>("WaterContentPercentage")
                        .HasColumnType("float");

                    b.Property<string>("WorksheetId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PreparationId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SampleId");

                    b.HasIndex("SourceMaterialId");

                    b.HasIndex("SpecificationId");

                    b.HasIndex("StandardTestMethodId");

                    b.ToTable("MoistureContents");
                });

            modelBuilder.Entity("Domain.Moisture.SourceMaterial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialDesciption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SourceMaterials");
                });

            modelBuilder.Entity("Domain.Moisture.Specification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Specifications");
                });

            modelBuilder.Entity("Domain.OvenEquipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ManufactureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OvenEquipments");
                });

            modelBuilder.Entity("Domain.Preparation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BalanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<double>("DryingTemperature")
                        .HasColumnType("float");

                    b.Property<string>("MaterialExcluded")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<double>("VisualNomialPraticalSize")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BalanceId");

                    b.ToTable("Preparations");
                });

            modelBuilder.Entity("Domain.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Domain.Sample", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SampledBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SampledDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Samples");
                });

            modelBuilder.Entity("Domain.StandardTestMethod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("StandardTestMethods");
                });

            modelBuilder.Entity("Domain.Moisture.MoistureContent", b =>
                {
                    b.HasOne("Domain.Preparation", "Preparation")
                        .WithMany()
                        .HasForeignKey("PreparationId");

                    b.HasOne("Domain.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("Domain.Sample", "Sample")
                        .WithMany()
                        .HasForeignKey("SampleId");

                    b.HasOne("Domain.Moisture.SourceMaterial", "SourceMaterial")
                        .WithMany()
                        .HasForeignKey("SourceMaterialId");

                    b.HasOne("Domain.Moisture.Specification", "Specification")
                        .WithMany()
                        .HasForeignKey("SpecificationId");

                    b.HasOne("Domain.StandardTestMethod", "StandardTestMethod")
                        .WithMany()
                        .HasForeignKey("StandardTestMethodId");

                    b.Navigation("Preparation");

                    b.Navigation("Project");

                    b.Navigation("Sample");

                    b.Navigation("SourceMaterial");

                    b.Navigation("Specification");

                    b.Navigation("StandardTestMethod");
                });

            modelBuilder.Entity("Domain.Preparation", b =>
                {
                    b.HasOne("Domain.BalanceEquipment", "Balance")
                        .WithMany()
                        .HasForeignKey("BalanceId");

                    b.Navigation("Balance");
                });

            modelBuilder.Entity("Domain.Sample", b =>
                {
                    b.HasOne("Domain.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });
#pragma warning restore 612, 618
        }
    }
}
